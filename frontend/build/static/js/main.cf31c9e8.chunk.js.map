{"version":3,"sources":["store/application/actions.ts","store/application/reducer.ts","store/areaPage/actions.ts","store/areaPage/reducer.ts","reducer.ts","middlewares/actionHandler.ts","actionHandlers/callBackend.ts","models/query.ts","components/Guard/Guard.tsx","components/Guard/GuardForNonAuthorized.ts","components/PasswordField/PasswordField.tsx","components/LoginForm/LoginForm.tsx","components/LoginForm/LoginFormContainer.ts","pages/LoginPage/LoginPage.tsx","components/Guard/GuardForAuthorized.ts","components/HistoryTable/HistoryTable.tsx","components/HistoryTable/HistoryTableContainer.ts","components/ButtonsField/ButtonsField.tsx","components/NumberField/NumberField.tsx","components/AreaForm/AreaForm.tsx","components/AreaForm/AreaFormContainer.ts","utils/normalizeNumber.ts","components/Area/Area.tsx","components/Area/AreaContainer.ts","pages/AreaPage/AreaPage.tsx","pages/AreaPage/AreaPageContainer.ts","routes.tsx","components/CallBackendNotifications/CallBackendNotifications.tsx","components/CallBackendNotifications/CallBackendNotificationsContainer.ts","components/SignOutButton/SignOutButton.tsx","components/SignOutButton/SignOutButtonContainer.tsx","components/Header/Header.tsx","components/PageContainer/PageContainer.tsx","components/App/App.tsx","components/App/AppContainer.ts","serviceWorker.ts","index.tsx","actionHandlers/sessionHandler.ts","actionHandlers/sendQuery.ts"],"names":["ApplicationActionType","CallBackendActionNotificationType","setSession","session","type","SET_SESSION","resetSession","RESET_SESSION","callBackend","method","onFetch","a","async","httpMethod","data","init","CALL_BACKEND","notify","excludedNotifications","lock","callBackendWithNotify","action","initialState","locked","AreaPageActionType","addQuery","query","ADD_QUERY","sendQuery","x","y","r","SEND_QUERY","updateHistory","history","UPDATE_HISTORY","form","compareQueries","b","rootReducer","combineReducers","application","state","undefined","LOCK","UNLOCK","SHOW_BACKEND_NOTIFICATION_ACTION","shownCallBackendNotification","notificationType","HIDE_BACKEND_NOTIFICATION_ACTION","areaPage","length","UPDATE_FORM","value","property","CLEAN","handlers","Map","registerHandler","handler","actionTypes","forEach","actionType","set","backendApi","dataArray","key","push","encodeURIComponent","fetch","body","includes","toUpperCase","join","headers","backendApiUserNotifyWrapper","exclude","dispatch","dispatchNotification","response","ok","status","INVALID_VALUE","CANNOT_CONNECT","parseQuery","json","created","Date","Guard","this","props","isAllowed","redirectUrl","children","to","React","Component","GuardForNonAuthorized","connect","PasswordField","LoginForm","username","password","successRegistrationDialog","onUsernameChange","setState","usernameError","onPasswordChange","passwordError","onSuccessRegistrationDialogHide","okDialogAction","label","onClick","onSignInError","onSignUpSuccess","onSignUpError","onSignIn","event","preventDefault","onSignUp","className","onSubmit","disabled","error","onChange","raised","primary","title","actions","onOverlayClick","onEscKeyDown","active","LoginFormContainer","onError","btoa","map","onSuccess","LoginPage","GuardForAuthorized","HistoryTable","reverse","i","result","toLocaleString","elapsed","HistoryTableContainer","ButtonsField","availableValues","alabel","avalue","floating","mini","defaultProps","NumberField","trimValue","trim","maxLength","prevProps","prevState","snapshot","String","verifyNumber","fieldProps","replace","isNaN","AreaForm","yError","validateParameters","availableX","hint","errorMessages","availableR","v","AreaFormContainer","updateForm","normalizeNumber","n","scale","c","Math","round","toFixed","Area","canvas","canvasScale","canvasTranslate","onUndefinedRDialogHide","undefinedRDialog","mouse","onMouseMove","currentTarget","offsetLeft","parseInt","getCurrentStyle","offsetTop","rect","getBoundingClientRect","ceil","clientX","left","clientY","top","CANVAS_WIDTH","CANVAS_HEIGHT","popupX","popupY","document","documentElement","clientHeight","onMouseLeave","createRef","current","context","getContext","actualCanvasSize","globalAlpha","resetTransform","clearRect","width","height","min","translate","strokeStyle","fillStyle","font","fillRect","beginPath","clip","R","halfR","moveTo","lineTo","arcTo","abs","fill","stroke","lineWidth","closePath","point","arc","PI","repaint","ref","style","bottom","display","element","window","getComputedStyle","getPropertyValue","e","currentStyle","AreaContainer","AreaPage","reloadInterval","setReloadInterval","clearInterval","reloadHistory","setInterval","historyLength","AreaPageContainer","routes","exact","path","component","CallBackendNotifications","onNotificationHide","CallBackendNotificationsContainer","onSignOut","SignOutButton","SignOutButtonContainer","Header","PageContainer","App","loadSession","AppContainer","JSON","parse","localStorage","getItem","console","log","Boolean","location","hostname","match","store","createStore","applyMiddleware","next","get","setItem","stringify","removeItem","getState","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf31c9e8.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport enum ApplicationActionType {\n\n    SET_SESSION = 'SET_SESSION',\n    RESET_SESSION = 'RESET_SESSION',\n\n    LOCK = 'LOCK',\n    UNLOCK = 'UNLOCK',\n\n    CALL_BACKEND = 'CALL_BACKEND',\n    SHOW_BACKEND_NOTIFICATION_ACTION = 'SHOW_BACKEND_NOTIFICATION_ACTION',\n    HIDE_BACKEND_NOTIFICATION_ACTION = 'HIDE_BACKEND_NOTIFICATION_ACTION'\n}\n\nexport interface SetSessionAction extends Action<ApplicationActionType.SET_SESSION> {\n\n    session: string;\n}\n\nexport interface ResetSessionAction extends Action<ApplicationActionType.RESET_SESSION> {}\n\nexport interface LockAction extends Action<ApplicationActionType.LOCK> {}\nexport interface UnlockAction extends Action<ApplicationActionType.UNLOCK> {}\n\nexport type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'TRACE' | 'PATCH' | 'PURGE' | 'HEAD' | string;\n\nexport enum CallBackendActionNotificationType {\n\n    INVALID_VALUE = 'INVALID_VALUE',\n    CANNOT_CONNECT = 'CANNOT_CONNECT'\n}\n\nexport interface CallBackendAction extends Action<ApplicationActionType.CALL_BACKEND> {\n\n    method: string;\n    session?: string;\n\n    httpMethod: HttpMethod;\n    data: { [key: string]: any };\n    init: { headers?: Headers | { [key: string]: any }, [key: string]: any };\n\n    notify: boolean;\n    excludedNotifications: CallBackendActionNotificationType[];\n\n    lock: boolean;\n\n    onFetch(fetch: Promise<Response>): Promise<void>;\n}\n\nexport interface ShowBackendNotificationAction extends Action<ApplicationActionType.SHOW_BACKEND_NOTIFICATION_ACTION> {\n\n    notificationType: CallBackendActionNotificationType;\n}\n\nexport interface HideBackendNotificationAction extends Action<ApplicationActionType.HIDE_BACKEND_NOTIFICATION_ACTION> {}\n\nexport type ApplicationAction = SetSessionAction | ResetSessionAction | LockAction | UnlockAction | CallBackendAction |\n    ShowBackendNotificationAction | HideBackendNotificationAction;\n\nexport function setSession(session: string): SetSessionAction {\n    return { type: ApplicationActionType.SET_SESSION, session };\n}\n\nexport function resetSession(): ResetSessionAction {\n    return { type: ApplicationActionType.RESET_SESSION };\n}\n\nexport function lock(): LockAction {\n    return { type: ApplicationActionType.LOCK };\n}\n\nexport function unlock(): UnlockAction {\n    return { type: ApplicationActionType.UNLOCK };\n}\n\nexport function callBackend(\n    method: string,\n    onFetch: (fetch: Promise<Response>) => Promise<void> = async () => {},\n    session?: string,\n    httpMethod: HttpMethod = 'GET',\n    data: { [key: string]: any } = {},\n    init: { headers?: Headers | { [key: string]: any }, [key: string]: any } = {}\n): CallBackendAction {\n    return {\n        type: ApplicationActionType.CALL_BACKEND,\n\n        method, session, httpMethod, data, init,\n\n        notify: false,\n        excludedNotifications: [],\n\n        lock: true,\n\n        onFetch\n    };\n}\n\nexport function callBackendWithNotify(\n    action: CallBackendAction,\n    excludedNotifications: CallBackendActionNotificationType[] = []\n): CallBackendAction {\n    return { ...action, notify: true, excludedNotifications };\n}\n\nexport function callBackendWithoutLock(action: CallBackendAction): CallBackendAction {\n    return { ...action, lock: false };\n}\n\nexport function showBackendNotification(\n    notificationType: CallBackendActionNotificationType\n): ShowBackendNotificationAction {\n    return { type: ApplicationActionType.SHOW_BACKEND_NOTIFICATION_ACTION, notificationType };\n}\n\nexport function hideBackendNotification(): HideBackendNotificationAction {\n    return { type: ApplicationActionType.HIDE_BACKEND_NOTIFICATION_ACTION };\n}\n","import { ApplicationAction, ApplicationActionType, CallBackendActionNotificationType } from './actions';\n\nexport interface ApplicationState {\n\n    session?: string;\n    locked: boolean;\n    shownCallBackendNotification?: CallBackendActionNotificationType;\n}\n\nconst initialState: ApplicationState = {\n\n    locked: false\n};\n\nexport function application(state: ApplicationState = initialState, action: ApplicationAction): ApplicationState {\n    switch (action.type) {\n        case ApplicationActionType.SET_SESSION:\n            return { ...state, session: action.session };\n\n        case ApplicationActionType.RESET_SESSION:\n            return { ...state, session: undefined };\n\n        case ApplicationActionType.LOCK:\n            return { ...state, locked: true };\n\n        case ApplicationActionType.UNLOCK:\n            return { ...state, locked: false };\n\n        case ApplicationActionType.SHOW_BACKEND_NOTIFICATION_ACTION:\n            return { ...state, shownCallBackendNotification: action.notificationType };\n\n        case ApplicationActionType.HIDE_BACKEND_NOTIFICATION_ACTION:\n            return { ...state, shownCallBackendNotification: undefined };\n    }\n\n    return state;\n}\n","import { Action } from 'redux';\n\nimport { Query } from '../../models/query';\n\nexport enum AreaPageActionType {\n\n    ADD_QUERY = 'ADD_QUERY',\n    SEND_QUERY = 'SEND_QUERY',\n\n    UPDATE_HISTORY = 'UPDATE_HISTORY',\n\n    UPDATE_FORM = 'UPDATE_FORM',\n    CLEAN = 'CLEAN'\n}\n\nexport interface AddQueryAction extends Action<AreaPageActionType.ADD_QUERY> {\n\n    query: Query;\n}\n\nexport interface SendQueryAction extends Action<AreaPageActionType.SEND_QUERY> {\n\n    x?: number;\n    y?: number;\n    r?: number;\n}\n\nexport interface UpdateHistoryAction extends Action<AreaPageActionType.UPDATE_HISTORY> {\n\n    history: Query[];\n}\n\nexport interface UpdateFormAction extends Action<AreaPageActionType.UPDATE_FORM> {\n\n    property: 'x' | 'y' | 'r';\n    value?: number;\n}\n\nexport interface CleanAction extends Action<AreaPageActionType.CLEAN> {}\n\nexport type AreaPageAction = AddQueryAction | SendQueryAction |\n    UpdateHistoryAction | UpdateFormAction | CleanAction;\n\nexport function addQuery(query: Query): AddQueryAction {\n    return { type: AreaPageActionType.ADD_QUERY, query };\n}\n\nexport function sendQuery(x?: number, y?: number, r?: number): SendQueryAction {\n    return { type: AreaPageActionType.SEND_QUERY, x, y, r };\n}\n\nexport function updateHistory(history: Query[]): UpdateHistoryAction {\n    return { type: AreaPageActionType.UPDATE_HISTORY, history };\n}\n\nexport function updateForm(property: UpdateFormAction['property'], value?: number): UpdateFormAction {\n    return { type: AreaPageActionType.UPDATE_FORM, property, value };\n}\n\nexport function clean(): CleanAction {\n    return { type: AreaPageActionType.CLEAN };\n}\n","import { AreaPageAction, AreaPageActionType } from './actions';\nimport { Query } from '../../models/query';\n\nexport interface AreaPageState {\n\n    history: Query[];\n\n    form: {\n        x?: number;\n        y?: number;\n        r?: number;\n    }\n}\n\nconst initialState: AreaPageState = {\n\n    history: [],\n    form: {}\n};\n\nexport function areaPage(state: AreaPageState = initialState, action: AreaPageAction): AreaPageState {\n    switch (action.type) {\n        case AreaPageActionType.ADD_QUERY:\n            if (state.history.length === 0 || !compareQueries(action.query, state.history[state.history.length - 1])) {\n                return { ...state, history: [...state.history, action.query] };\n            } else {\n                break;\n            }\n\n        case AreaPageActionType.UPDATE_HISTORY:\n            return { ...state, history: action.history };\n\n        case AreaPageActionType.UPDATE_FORM:\n            if (\n                action.value === undefined ||\n                action.property === 'x' || action.property === 'r' ||\n                (action.property === 'y' && action.value > -5 && action.value < 3)\n            ) {\n                return { ...state, form: { ...state.form, [action.property]: action.value } };\n            } else {\n                return { ...state, form: { ...state.form, [action.property]: undefined } };\n            }\n\n        case AreaPageActionType.CLEAN:\n            return { ...state, history: [], form: {} };\n    }\n\n    return state;\n}\n\nfunction compareQueries(a: Query, b: Query) {\n    return a.x === b.x && a.y === b.y && a.r === b.r;\n}\n","import { combineReducers } from 'redux';\n\nimport { application } from './store/application/reducer';\nimport { areaPage } from './store/areaPage/reducer';\n\nexport const rootReducer = combineReducers({ application, areaPage });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { Action, Middleware, MiddlewareAPI } from 'redux';\n\nexport type ActionHandler<T = any> = (action: T, store: MiddlewareAPI) => void;\n\nconst handlers: Map<any, ActionHandler> = new Map();\n\nexport const actionHandler: Middleware = store => next => (action: Action) => {\n    const handler = handlers.get(action.type);\n\n    if (handler) {\n        handler(action, store);\n    }\n\n    next(action);\n};\n\nexport function registerHandler(handler: ActionHandler, ...actionTypes: any) {\n    actionTypes.forEach((actionType: any) => handlers.set(actionType, handler));\n}\n","import { Dispatch, MiddlewareAPI } from 'redux';\n\nimport { CallBackendAction, CallBackendActionNotificationType, HttpMethod,\n    lock, showBackendNotification, unlock } from '../store/application/actions';\n\n// const backendHost = '//localhost:8080';\nconst backendHost = '';\n\nexport function callBackend(action: CallBackendAction, store: MiddlewareAPI) {\n    (async () => {\n        try {\n            if (action.lock) {\n                store.dispatch(lock());\n            }\n\n            let fetch: Promise<Response>;\n            if (action.session === undefined) {\n                fetch = backendApi(action.method, action.httpMethod, action.data, action.init);\n            } else {\n                fetch = authorizedBackendApi(action.method, action.session, action.httpMethod, action.data, action.init);\n            }\n\n            if (action.notify) {\n                await action.onFetch(backendApiUserNotifyWrapper(fetch, action.excludedNotifications, store.dispatch));\n            } else {\n                await action.onFetch(fetch);\n            }\n        } catch (e) {\n            console.log(e);\n        } finally {\n            if (action.lock) {\n                store.dispatch(unlock());\n            }\n        }\n    })();\n}\n\nfunction backendApi(\n    method: string,\n    httpMethod: HttpMethod,\n    data: { [key: string]: any },\n    init: { headers?: Headers | { [key: string]: any }, [key: string]: any }\n): Promise<Response> {\n    const dataArray: string[] = [];\n\n    for (const key in data) {\n        dataArray.push(`${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`);\n    }\n\n    return fetch(`${backendHost}/api/v1/${method}`, {\n        ...init,\n\n        method: httpMethod,\n        body: ['GET', 'HEAD'].includes(httpMethod.toUpperCase())\n            ? undefined\n            : dataArray.join('&'),\n\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json',\n\n            ...init.headers\n        }\n    });\n}\n\nfunction authorizedBackendApi(\n    method: string,\n    session: string,\n    httpMethod: HttpMethod,\n    data: { [key: string]: any },\n    init: { headers?: Headers | { [key: string]: any }, [key: string]: any }\n) {\n    return backendApi(method, httpMethod, data, {\n        ...init,\n\n        headers: {\n            'Authorization': `Basic ${session}`,\n\n            ...init.headers\n        }\n    });\n}\n\nasync function backendApiUserNotifyWrapper(\n    fetch: Promise<Response>,\n    exclude: CallBackendActionNotificationType[],\n    dispatch: Dispatch\n): Promise<Response> {\n    function dispatchNotification(type: CallBackendActionNotificationType) {\n        if (!exclude.includes(type)) {\n            dispatch(showBackendNotification(type));\n        }\n    }\n\n    try {\n        const response = await fetch;\n\n        if (!response.ok) {\n            if (response.status === 400) {\n                dispatchNotification(CallBackendActionNotificationType.INVALID_VALUE);\n            }\n        }\n\n        return fetch;\n    } catch (e) {\n        dispatchNotification(CallBackendActionNotificationType.CANNOT_CONNECT);\n\n        throw e;\n    }\n}\n","\nexport interface Query {\n\n    x: number;\n    y: number;\n    r: number;\n    result: boolean;\n\n    created: Date;\n    elapsed: number;\n}\n\nexport function parseQuery(json: any): Query {\n    return { ...json, created: new Date(json.created) };\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport interface GuardProps {\n\n    isAllowed: boolean;\n    redirectUrl?: string;\n}\n\nexport class Guard extends React.Component<React.PropsWithChildren<GuardProps>> {\n\n    render() {\n        const { isAllowed, redirectUrl, children } = this.props;\n\n        if (!isAllowed) {\n            if (redirectUrl) {\n                return (<Redirect to={redirectUrl} />);\n            }\n\n            return null;\n        }\n\n        return children;\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { Guard, GuardProps } from './Guard';\nimport { RootState } from '../../reducer';\n\ntype StateProps = Pick<GuardProps, 'isAllowed'>;\n\nconst mapStateToProps = (state: RootState): StateProps => {\n    return { isAllowed: !state.application.session };\n};\n\nexport const GuardForNonAuthorized = connect(mapStateToProps)(Guard);\n","import React from 'react';\n\nimport { TextField, TextFieldProps } from '../TextField/TextField';\n\nexport class PasswordField extends React.Component<TextFieldProps> {\n\n    render() {\n        return (\n            <TextField type=\"password\" {...this.props} />\n        );\n    }\n}\n","import React from 'react';\nimport { Button } from 'react-toolbox/lib/button';\nimport { Dialog, DialogActionProps } from 'react-toolbox/lib/dialog';\n\nimport { TextField } from '../TextField/TextField';\nimport { PasswordField } from '../PasswordField/PasswordField';\n\nimport './LoginForm.css';\n\nexport interface LoginFormProps {\n\n    locked: boolean;\n\n    onSignIn(username: string, password: string, onError: (status: number) => void): void;\n    onSignUp(username: string, password: string, onSuccess: () => void, onError: (status: number) => void): void;\n}\n\ninterface LoginFormState {\n\n    username: string;\n    password: string;\n\n    usernameError?: string;\n    passwordError?: string;\n\n    successRegistrationDialog: boolean;\n}\n\nexport class LoginForm extends React.Component<LoginFormProps, LoginFormState> {\n\n    state: LoginFormState = { username: '', password: '', successRegistrationDialog: false };\n\n    private onUsernameChange = (username: string) => this.setState({ ...this.state, username, usernameError: undefined });\n    private onPasswordChange = (password: string) => this.setState({ ...this.state, password, passwordError: undefined });\n\n    private onSuccessRegistrationDialogHide = () => {\n        this.setState({\n            ...this.state,\n\n            successRegistrationDialog: false\n        });\n    };\n\n    private okDialogAction: DialogActionProps = { label: 'Ок', onClick: this.onSuccessRegistrationDialogHide };\n\n    private onSignInError = (status: number) => {\n        if (status === 401) {\n            this.setState({\n                ...this.state,\n\n                usernameError: 'Неверное имя пользователя или пароль'\n            });\n        }\n    };\n\n    private onSignUpSuccess = () => {\n        this.setState({ ...this.state, successRegistrationDialog: true });\n    };\n\n    private onSignUpError = (status: number) => {\n        const { username, password } = this.state;\n\n        switch (status) {\n            case 400:\n                if (username.length < 2) {\n                    this.setState({\n                        ...this.state,\n\n                        usernameError: 'Имя пользователя должно содержать как минимум 2 символа'\n                    });\n                } else if (password.length === 0) {\n                    this.setState({\n                        ...this.state,\n\n                        passwordError: 'Пароль не должен быть пустым'\n                    });\n                }\n                break;\n\n            case 409:\n                this.setState({\n                    ...this.state,\n\n                    usernameError: 'Пользователь с таким именем уже зарегистрирован'\n                });\n                break;\n        }\n    };\n\n    private onSignIn = (event: React.FormEvent<HTMLFormElement>) => {\n        const { username, password } = this.state;\n\n        this.setState({ ...this.state, usernameError: undefined, passwordError: undefined });\n        this.props.onSignIn(username, password, this.onSignInError);\n        event.preventDefault();\n    };\n\n    private onSignUp = (event: React.FormEvent<HTMLButtonElement>) => {\n        const { username, password } = this.state;\n\n        this.setState({ ...this.state, usernameError: undefined, passwordError: undefined });\n        this.props.onSignUp(username, password, this.onSignUpSuccess, this.onSignUpError);\n        event.preventDefault();\n    };\n\n    render() {\n        const { locked } = this.props;\n        const { username, password, usernameError, passwordError, successRegistrationDialog } = this.state;\n\n        return (\n            <div className=\"login-form\">\n                <form onSubmit={this.onSignIn}>\n                    <TextField label=\"Имя пользователя:\" disabled={locked} error={usernameError} value={username}\n                               onChange={this.onUsernameChange} />\n\n                    <PasswordField label=\"Пароль:\" disabled={locked} error={passwordError} value={password}\n                                   onChange={this.onPasswordChange} />\n\n                    <Button type=\"submit\" label=\"Вход\" className=\"page-rightGap\" raised primary disabled={locked} />\n                    <Button type=\"button\" label=\"Регистрация\" raised disabled={locked} onClick={this.onSignUp} />\n                </form>\n\n                <Dialog title=\"Поздравляем\" actions={[this.okDialogAction]}\n                        onOverlayClick={this.onSuccessRegistrationDialogHide}\n                        onEscKeyDown={this.onSuccessRegistrationDialogHide}\n                        active={successRegistrationDialog}>\n                    <p>\n                        Вы успешно зарегистрированы!\n                    </p>\n                </Dialog>\n            </div>\n        );\n    }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { LoginForm, LoginFormProps } from './LoginForm';\nimport {\n    callBackend,\n    CallBackendActionNotificationType,\n    callBackendWithNotify,\n    setSession\n} from '../../store/application/actions';\nimport { RootState } from '../../reducer';\nimport { updateHistory } from \"../../store/areaPage/actions\";\nimport { parseQuery } from \"../../models/query\";\n\ntype StateProps = Pick<LoginFormProps, 'locked'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return { locked: state.application.locked };\n}\n\ntype DispatchProps = Pick<LoginFormProps, 'onSignIn' | 'onSignUp'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        onSignIn(username: string, password: string, onError: (status: number) => void): void {\n            const session = btoa(`${username}:${password}`);\n\n            dispatch(callBackendWithNotify(callBackend(\n                'history',\n                async fetch => {\n                    const response = await fetch;\n\n                    if (response.ok) {\n                        dispatch(setSession(session));\n                        dispatch(updateHistory((await response.json()).map(parseQuery)));\n                        return;\n                    }\n\n                    onError(response.status);\n                },\n                session\n            ), [CallBackendActionNotificationType.INVALID_VALUE]));\n        },\n\n        onSignUp(username: string, password: string, onSuccess: () => void, onError: (status: number) => void): void {\n            dispatch(callBackendWithNotify(callBackend(\n                'user',\n                async fetch => {\n                    const response = await fetch;\n\n                    if (response.ok) {\n                        onSuccess();\n                        return;\n                    }\n\n                    onError(response.status);\n                },\n                undefined,\n                'POST',\n                { username, password }\n            ), [CallBackendActionNotificationType.INVALID_VALUE]));\n        }\n    };\n}\n\nexport const LoginFormContainer = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React from 'react';\n\nimport { GuardForNonAuthorized } from '../../components/Guard/GuardForNonAuthorized';\nimport { LoginFormContainer } from '../../components/LoginForm/LoginFormContainer';\n\nimport './LoginPage.css';\n\nexport class LoginPage extends React.Component {\n\n    render() {\n        return (\n            <GuardForNonAuthorized redirectUrl=\"/area\">\n                 <div className=\"login-page-main\">\n                    <div className=\"login-form-container page-block\">\n                        <LoginFormContainer />\n                    </div>\n                </div>\n            </GuardForNonAuthorized>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { Guard, GuardProps } from './Guard';\nimport { RootState } from '../../reducer';\n\ntype StateProps = Pick<GuardProps, 'isAllowed'>;\n\nconst mapStateToProps = (state: RootState): StateProps => {\n    return { isAllowed: !!state.application.session };\n};\n\nexport const GuardForAuthorized = connect(mapStateToProps)(Guard);\n","import React from 'react';\n\nimport { Query } from '../../models/query';\n\nimport './HistoryTable.css';\n\nexport interface HistoryTableProps {\n\n    history: Query[];\n}\n\nexport class HistoryTable extends React.Component<HistoryTableProps> {\n\n    render() {\n        const { history } = this.props;\n\n        return (\n            <table className=\"history-table\">\n                <thead>\n                <tr>\n                    <th>X</th>\n                    <th>Y</th>\n                    <th>R</th>\n                    <th>Результат</th>\n                    <th>Время создания</th>\n                    <th>Время обработки</th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {[...history].reverse().map((query, i) => (\n                    <tr key={i}>\n                        <td>{query.x}</td>\n                        <td>{query.y}</td>\n                        <td className=\"no-wrap\">{query.r}</td>\n                        <td>точка {query.result ? '' : 'не'} попала в область</td>\n                        <td>{query.created.toLocaleString()}</td>\n                        <td className=\"no-wrap\">{query.elapsed} с</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { HistoryTable, HistoryTableProps } from './HistoryTable';\nimport { RootState } from '../../reducer';\n\ntype StateProps = Pick<HistoryTableProps, 'history'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return { history: state.areaPage.history };\n}\n\nexport const HistoryTableContainer = connect(mapStateToProps)(HistoryTable);\n","import React from 'react';\n\nimport { Button } from 'react-toolbox/lib/button';\n\nimport './ButtonsField.css'\n\ninterface ButtonsFieldProps<T> {\n\n    label?: string;\n    disabled: boolean;\n    availableValues: (readonly [string, T])[];\n\n    value?: T;\n    onChange(value?: T): void;\n}\n\nexport class ButtonsField<T extends any> extends React.Component<ButtonsFieldProps<T>> {\n\n    static defaultProps = { disabled: false, onChange() {} };\n\n    render() {\n        const {label, disabled, availableValues, value, onChange} = this.props;\n\n        return (\n            <div className=\"ButtonsField\">\n                {label && (\n                    <div className=\"ButtonsField-label\">{label}</div>\n                )}\n\n                <div className=\"ButtonsField-buttons\">\n                    {availableValues.map(([alabel, avalue]) => (\n                        <Button key={avalue} onClick={() => onChange(value === avalue ? undefined : avalue)}\n                                label={alabel} floating mini primary={value === avalue} disabled={disabled} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { TextField, TextFieldProps } from '../TextField/TextField';\n\ninterface NumberFieldProps extends TextFieldProps {\n\n    trimValue: boolean;\n    value?: number | null;\n\n    onChange(value?: number | null): void;\n}\n\ninterface NumberFieldState {\n\n    value: string;\n}\n\nexport class NumberField extends React.Component<NumberFieldProps, NumberFieldState> {\n\n    static defaultProps: NumberFieldProps = { trimValue: true, onChange() {} };\n\n    state: NumberFieldState = { value: '' };\n\n    private onChange = (value: string) => {\n        if (this.props.trimValue) {\n            value = value.trim();\n        }\n\n        if (this.props.maxLength !== undefined && value.length > this.props.maxLength) {\n            return;\n        }\n\n        this.setState({ ...this.state, value });\n    };\n\n    private static verifyNumber(value: string) {\n        if (!value.trim()) {\n            return undefined;\n        }\n\n        value = value.replace(',', '.');\n        if (isNaN(+value)) {\n            return null;\n        }\n\n        return +value;\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<NumberFieldProps>,\n        prevState: Readonly<NumberFieldState>,\n        snapshot?: any\n    ): void {\n        if (prevProps.value !== this.props.value && this.props.value) {\n            if (+this.state.value !== this.props.value) {\n                this.setState({ ...this.state, value: String(this.props.value) });\n            }\n        }\n\n        if (prevState.value !== this.state.value) {\n            const value = NumberField.verifyNumber(this.state.value);\n\n            if (NumberField.verifyNumber(prevState.value) !== value) {\n                this.props.onChange(value);\n            }\n        }\n    }\n\n    render() {\n        const fieldProps = { ...this.props };\n\n        delete fieldProps.trimValue;\n        delete fieldProps.value;\n        delete fieldProps.onChange;\n        delete fieldProps.maxLength;\n\n        return (\n            <TextField type=\"text\" {...fieldProps} value={this.state.value} onChange={this.onChange} />\n        );\n    }\n}\n","import React from 'react';\nimport { Button } from 'react-toolbox/lib/button';\n\nimport { UpdateFormAction } from '../../store/areaPage/actions';\nimport { ButtonsField } from '../ButtonsField/ButtonsField';\nimport { NumberField } from '../NumberField/NumberField';\n\nimport './AreaForm.css';\n\nexport interface AreaFormProps {\n\n    locked: boolean;\n\n    x?: number;\n    y?: number;\n    r?: number;\n\n    onChange(property: UpdateFormAction['property'], value?: number | null): void;\n    onSubmit(): void;\n}\n\ninterface AreaFormState {\n\n    x?: number | null;\n    y?: number | null;\n    r?: number | null;\n\n    yError: boolean;\n}\n\nexport class AreaForm extends React.Component<AreaFormProps, AreaFormState> {\n\n    private static errorMessages = {\n        y: 'Y должен быть числом и входить в интервал (-5, 3)'\n    };\n\n    private static availableX = [-4, -3, -2, -1, 0, 1, 2, 3, 4].map(v => [String(v), v] as const);\n    private static availableR = [-4, -3, -2, -1, 0, 1, 2, 3, 4].map(v => [String(v), v] as const);\n\n    state: AreaFormState = { yError: false };\n\n    componentDidUpdate(\n        prevProps: Readonly<AreaFormProps>,\n        prevState: Readonly<AreaFormState>,\n        snapshot?: any\n    ): void {\n        if (\n            this.state.yError !== (\n                this.props.y === undefined && this.state.y !== undefined\n            )\n        ) {\n            this.setState({\n                ...this.state,\n\n                yError: !this.state.yError\n            });\n        }\n\n        (['x', 'y', 'r'] as const).forEach(property => {\n            if (prevState[property] !== this.state[property]) {\n                this.props.onChange(property, this.state[property]);\n            }\n        });\n    }\n\n    private onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        if (this.validateParameters()) {\n            this.props.onSubmit();\n        }\n\n        event.preventDefault();\n    };\n\n    private validateParameters() {\n        const { x, y, r } = this.props;\n\n        return x !== undefined && y !== undefined && r !== undefined;\n    }\n\n    render() {\n        const { locked } = this.props;\n        const { x, y, r, yError } = this.state;\n\n        return (\n            <div className=\"area-form\">\n                <form onSubmit={this.onSubmit}>\n                    <ButtonsField label=\"Параметр X:\" availableValues={AreaForm.availableX} value={x} disabled={locked}\n                                 onChange={x => this.setState({ ...this.state, x })} />\n\n                    <NumberField label=\"Параметр Y:\" hint=\"(-5, 3)\" value={y} maxLength={16}\n                                 error={yError && AreaForm.errorMessages.y} disabled={locked}\n                                 onChange={y => this.setState({ ...this.state, y })} />\n\n                    <ButtonsField label=\"Параметр R:\" availableValues={AreaForm.availableR} value={r} disabled={locked}\n                                 onChange={r => this.setState({ ...this.state, r })} />\n\n                    <Button type=\"submit\" label=\"Проверить\" raised primary\n                            disabled={locked || !this.validateParameters()} />\n                </form>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { AreaForm, AreaFormProps } from './AreaForm';\nimport { RootState } from '../../reducer';\nimport { sendQuery, updateForm, UpdateFormAction } from '../../store/areaPage/actions';\n\ntype StateProps = Pick<AreaFormProps, 'locked' | 'x' | 'y' | 'r'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return { locked: state.application.locked, ...state.areaPage.form };\n}\n\ntype DispatchProps = Pick<AreaFormProps, 'onChange' | 'onSubmit'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        onChange(property: UpdateFormAction['property'], value?: number | null) {\n            dispatch(updateForm(property, value === null ? undefined : value));\n        },\n\n        onSubmit() {\n            dispatch(sendQuery());\n        }\n    };\n}\n\nexport const AreaFormContainer = connect(mapStateToProps, mapDispatchToProps)(AreaForm);\n","\nexport function normalizeNumber(n: number, scale: number = 5) {\n    const c = 10 ** scale;\n\n    return +(Math.round(n * c) / c).toFixed(scale);\n}\n","import React from 'react';\nimport { Dialog, DialogActionProps } from 'react-toolbox/lib/dialog';\n\nimport { Query } from '../../models/query';\nimport { AreaPageState } from '../../store/areaPage/reducer';\nimport { normalizeNumber } from '../../utils/normalizeNumber';\n\nimport './Area.css';\n\nconst CANVAS_WIDTH = 400;\nconst CANVAS_HEIGHT = 400;\nconst CANVAS_STEPS_X = 7;\nconst CANVAS_STEPS_Y = 7;\nconst CANVAS_STEP_X = CANVAS_WIDTH / 2 / CANVAS_STEPS_X;\nconst CANVAS_STEP_Y = CANVAS_HEIGHT / 2 / CANVAS_STEPS_Y;\n\nconst CANVAS_COLOR_PRIMARY = '#090909';\nconst CANVAS_COLOR_SECONDARY = '#C0C0C0';\nconst CANVAS_COLOR_BACKGROUND = '#F9F9F9';\nconst CANVAS_COLOR_SHADOW = 'rgba(0, 0, 0, 0.5)';\nconst CANVAS_COLOR_AREA = '#007AD9';\nconst CANVAS_COLOR_POINT_OTHER = '#333333';\nconst CANVAS_COLOR_POINT_INCLUDES = '#00ff00';\nconst CANVAS_COLOR_POINT_NOT_INCLUDES = '#ff0000';\n\nexport interface AreaProps {\n\n    locked: boolean;\n\n    width?: number | string;\n    height?: number | string;\n\n    history: Query[];\n    form: AreaPageState['form'];\n\n    onSubmit(x: number, y: number): void;\n}\n\ninterface AreaState {\n\n    mouse?: {\n        x: number;\n        y: number;\n        popupX: number;\n        popupY: number;\n    };\n\n    undefinedRDialog: boolean;\n}\n\nexport class Area extends React.Component<AreaProps, AreaState> {\n\n    static defaultProps = { width: 400, height: 400 };\n\n    private readonly canvas: React.RefObject<HTMLCanvasElement>;\n\n    private canvasScale = 1;\n    private canvasTranslate = { x: 0, y: 0 };\n\n    private onUndefinedRDialogHide = () => this.setState({ ...this.state, undefinedRDialog: false });\n    private okDialogAction: DialogActionProps = { label: 'Ок', onClick: this.onUndefinedRDialogHide };\n\n    state: AreaState = { undefinedRDialog: false };\n\n    constructor(props: AreaProps) {\n        super(props);\n\n        this.canvas = React.createRef<HTMLCanvasElement>();\n    }\n\n    public repaint() {\n        const { form, history } = this.props;\n\n        const canvas = this.canvas.current;\n        if (!canvas) {\n            return;\n        }\n\n        const context = canvas.getContext('2d')!;\n\n        const actualCanvasSize = {\n            width: parseInt(getCurrentStyle(canvas, 'width'), 10),\n            height: parseInt(getCurrentStyle(canvas, 'height'), 10)\n        };\n\n        // Init canvas\n        context.globalAlpha = 1;\n        context.resetTransform();\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        const canvasScale = this.canvasScale = Math.min(\n            actualCanvasSize.width / CANVAS_WIDTH,\n            actualCanvasSize.height / CANVAS_HEIGHT\n        );\n\n        context.scale(canvasScale, canvasScale);\n\n        const canvasTranslate = this.canvasTranslate = {\n            x: (actualCanvasSize.width / canvasScale - CANVAS_WIDTH) / 2,\n            y: (actualCanvasSize.height / canvasScale - CANVAS_HEIGHT) / 2\n        };\n\n        context.translate(canvasTranslate.x, canvasTranslate.y);\n\n        context.strokeStyle = CANVAS_COLOR_PRIMARY;\n        context.fillStyle = CANVAS_COLOR_BACKGROUND;\n        context.font = `bold ${CANVAS_STEP_X / 2}px 'Courier New', monospace`;\n        context.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // Clip\n        context.beginPath();\n        context.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        context.clip();\n\n        // Area\n        if (form.r !== undefined) {\n            const R = +form.r;\n            const halfR = +form.r / 2;\n\n            context.fillStyle = CANVAS_COLOR_AREA;\n\n            context.beginPath();\n            context.moveTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n            context.lineTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2 - CANVAS_STEP_Y * halfR);\n            context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X * R, CANVAS_HEIGHT / 2);\n            context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X * halfR, CANVAS_HEIGHT / 2);\n            context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X * halfR, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * R);\n            context.lineTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * R);\n            context.lineTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * halfR);\n            context.arcTo(CANVAS_WIDTH / 2 - CANVAS_STEP_X * halfR, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * halfR,\n                CANVAS_WIDTH / 2 - CANVAS_STEP_X * halfR, CANVAS_HEIGHT / 2,\n                Math.abs((CANVAS_STEP_X + CANVAS_STEP_Y) / 2 * halfR));\n            context.fill();\n\n            context.fillStyle = CANVAS_COLOR_BACKGROUND;\n        }\n\n        // Grid\n        context.strokeStyle = CANVAS_COLOR_SECONDARY;\n\n        context.beginPath();\n        for (let i = 1; i < 7 * 2; ++i) {\n            context.moveTo(CANVAS_STEP_X / 4, i * CANVAS_STEP_Y);\n            context.lineTo(CANVAS_WIDTH - CANVAS_STEP_X / 4, i * CANVAS_STEP_Y);\n\n            context.moveTo(i * CANVAS_STEP_X,CANVAS_STEP_Y / 4);\n            context.lineTo(i * CANVAS_STEP_X, CANVAS_HEIGHT - CANVAS_STEP_Y / 4);\n        }\n        context.stroke();\n        context.strokeStyle = CANVAS_COLOR_PRIMARY;\n\n        // Axises\n        context.lineWidth = 2;\n\n        context.beginPath();\n        context.moveTo(CANVAS_STEP_X / 2, CANVAS_HEIGHT / 2);\n        context.lineTo(CANVAS_WIDTH - CANVAS_STEP_X / 2, CANVAS_HEIGHT / 2);\n        context.moveTo(CANVAS_WIDTH - CANVAS_STEP_X, CANVAS_HEIGHT / 2 - CANVAS_STEP_Y / 4);\n        context.lineTo(CANVAS_WIDTH - CANVAS_STEP_X / 2, CANVAS_HEIGHT / 2);\n        context.lineTo(CANVAS_WIDTH - CANVAS_STEP_X, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y / 4);\n\n        context.moveTo(CANVAS_WIDTH / 2, CANVAS_HEIGHT - CANVAS_STEP_Y / 2);\n        context.lineTo(CANVAS_WIDTH / 2, CANVAS_STEP_X / 2);\n        context.moveTo(CANVAS_WIDTH / 2 - CANVAS_STEP_X / 4, CANVAS_STEP_Y);\n        context.lineTo(CANVAS_WIDTH / 2, CANVAS_STEP_Y / 2);\n        context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X / 4, CANVAS_STEP_Y);\n        context.stroke();\n\n        context.lineWidth = 1;\n\n        // Shadow\n        context.fillStyle = CANVAS_COLOR_SHADOW;\n\n        context.beginPath();\n        context.moveTo(0, 0);\n        context.lineTo(CANVAS_WIDTH, 0);\n        context.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n        context.lineTo(0, CANVAS_HEIGHT);\n        context.closePath();\n\n        context.moveTo(CANVAS_WIDTH / 2 - CANVAS_STEP_X * 4, CANVAS_HEIGHT / 2 - CANVAS_STEP_Y * 3);\n        context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X * 4, CANVAS_HEIGHT / 2 - CANVAS_STEP_Y * 3);\n        context.lineTo(CANVAS_WIDTH / 2 + CANVAS_STEP_X * 4, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * 5);\n        context.lineTo(CANVAS_WIDTH / 2 - CANVAS_STEP_X * 4, CANVAS_HEIGHT / 2 + CANVAS_STEP_Y * 5);\n        context.closePath();\n\n        context.fill('evenodd');\n\n        context.fillStyle = CANVAS_COLOR_BACKGROUND;\n\n        // History\n        context.lineWidth = 0.5;\n\n        const centerX = CANVAS_WIDTH / 2;\n        const centerY = CANVAS_HEIGHT / 2;\n        history.forEach((point) => {\n            // context.globalAlpha = 1 - Math.min(point.r !== form.r ? Math.abs(+form.r - +point.r) / 3 : 0, 0.9);\n\n            context.fillStyle = point.r !== form.r\n                ? CANVAS_COLOR_POINT_OTHER\n                : point.result\n                    ? CANVAS_COLOR_POINT_INCLUDES\n                    : CANVAS_COLOR_POINT_NOT_INCLUDES\n            ;\n\n            context.beginPath();\n            context.arc(\n                centerX + +point.x * CANVAS_STEP_X,\n                centerY - +point.y * CANVAS_STEP_Y,\n                3, 0, Math.PI * 2\n            );\n            context.fill();\n            context.stroke();\n        });\n\n        context.globalAlpha = 1;\n        context.fillStyle = CANVAS_COLOR_BACKGROUND;\n\n        // Form point position\n\n        if (form.x !== undefined) {\n            context.beginPath();\n            context.moveTo(CANVAS_WIDTH / 2 + +form.x * CANVAS_STEP_X, CANVAS_HEIGHT);\n            context.lineTo(CANVAS_WIDTH / 2 + +form.x * CANVAS_STEP_X, 0);\n            context.stroke();\n        }\n\n        if (form.y != null) {\n            context.beginPath();\n            context.moveTo(0, CANVAS_HEIGHT / 2 - +form.y * CANVAS_STEP_Y);\n            context.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT / 2 - +form.y * CANVAS_STEP_Y);\n            context.stroke();\n        }\n\n        context.fillStyle = CANVAS_COLOR_BACKGROUND;\n    }\n\n    componentDidMount(): void {\n        this.repaint();\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<AreaProps>,\n        prevState: Readonly<AreaState>,\n        snapshot?: any\n    ): void {\n        this.repaint();\n    }\n\n    private onClick = () => {\n        const { form, locked, onSubmit } = this.props;\n        const { mouse } = this.state;\n\n        if (locked) {\n            return;\n        }\n\n        if (form.r === undefined) {\n            this.setState({ ...this.state, undefinedRDialog: true });\n            return;\n        }\n\n        if (mouse) {\n            onSubmit(mouse.x, mouse.y);\n        }\n    };\n\n    private onMouseMove = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const canvas = event.currentTarget;\n\n        if (canvas == null) {\n            return;\n        }\n\n        const offsetLeft = parseInt(getCurrentStyle(canvas, 'border-left-width'), 10);\n        const offsetTop = parseInt(getCurrentStyle(canvas, 'border-top-width'), 10);\n\n        const rect = canvas.getBoundingClientRect();\n        const x = Math.ceil(event.clientX - rect.left - offsetLeft) / this.canvasScale - this.canvasTranslate.x;\n        const y = Math.ceil(event.clientY - rect.top - offsetTop) / this.canvasScale - this.canvasTranslate.y;\n\n        if (x < 0 || x >= CANVAS_WIDTH || y < 0 || y >= CANVAS_HEIGHT) {\n            return;\n        }\n\n        const centerX = CANVAS_WIDTH / 2;\n        const centerY = CANVAS_HEIGHT / 2;\n\n        const zoomX = CANVAS_WIDTH / 14;\n        const zoomY = CANVAS_HEIGHT / 14;\n\n        this.setState({\n            ...this.state,\n\n            mouse: {\n                x: (x - centerX) / zoomX,\n                y: (centerY - y) / zoomY,\n                popupX: event.clientX,\n                popupY: document.documentElement.clientHeight - event.clientY\n            }\n        });\n    };\n\n    private onMouseLeave = () => {\n        this.setState({ ...this.state, mouse: undefined });\n    };\n\n    render() {\n        const { width, height } = this.props;\n        const { mouse, undefinedRDialog } = this.state;\n\n        return (\n            <div className=\"area\">\n                <canvas ref={this.canvas} className=\"area-canvas\" width={width} height={height} onClick={this.onClick}\n                        onMouseMove={this.onMouseMove} onMouseLeave={this.onMouseLeave} />\n\n                <div className=\"area-mouse-position\" style={{\n                    left: (mouse?.popupX ?? 0) + 'px',\n                    bottom: (mouse?.popupY ?? 0) + 'px',\n                    display: mouse ? 'inherit' : 'none'\n                }}>\n                    <div className=\"area-mouse-position-bubble shadow-container\">\n                        <div className=\"area-mouse-position-content\">\n                            X: {normalizeNumber(mouse?.x ?? 0)}\n\n                            <br />\n\n                            Y: {normalizeNumber(mouse?.y ?? 0)}\n                        </div>\n                    </div>\n                </div>\n\n                <Dialog title=\"Ошибка\" actions={[this.okDialogAction]} onOverlayClick={this.onUndefinedRDialogHide}\n                        onEscKeyDown={this.onUndefinedRDialogHide} active={undefinedRDialog}>\n                    <p>\n                        Параметр R не определён.<br />\n                        Для интерактивной работы с изображением введите корректное значение R в форму рядом.\n                    </p>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nfunction getCurrentStyle(element: HTMLElement, style: string) {\n    try {\n        return window.getComputedStyle(element, null).getPropertyValue(style);\n    } catch (e) {\n        return (element as { currentStyle?: { [key: string]: string } }).currentStyle![style];\n    }\n}\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { Area, AreaProps } from './Area';\nimport { RootState } from '../../reducer';\nimport { sendQuery } from '../../store/areaPage/actions';\n\ntype StateProps = Pick<AreaProps, 'locked' | 'history' | 'form'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return {\n        locked: state.application.locked,\n\n        history: state.areaPage.history,\n        form: state.areaPage.form\n    };\n}\n\ntype DispatchProps = Pick<AreaProps, 'onSubmit'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        onSubmit(x: number, y: number) {\n            dispatch(sendQuery(x, y));\n        }\n    }\n}\n\nexport const AreaContainer = connect(mapStateToProps, mapDispatchToProps)(Area);\n","import React from 'react';\n\nimport { GuardForAuthorized } from '../../components/Guard/GuardForAuthorized';\nimport { HistoryTableContainer } from '../../components/HistoryTable/HistoryTableContainer';\nimport { AreaFormContainer } from '../../components/AreaForm/AreaFormContainer';\nimport { AreaContainer } from '../../components/Area/AreaContainer';\nimport { Guard } from '../../components/Guard/Guard';\n\nimport './AreaPage.css';\n\nexport interface AreaPageProps {\n\n    session: string;\n    historyLength: number;\n\n    reloadHistory(session: string): void;\n}\n\nexport class AreaPage extends React.Component<AreaPageProps> {\n\n    private reloadInterval?: number;\n\n    componentDidMount() {\n        this.setReloadInterval();\n    }\n\n    componentDidUpdate(\n        prevProps: Readonly<AreaPageProps>,\n        prevState: Readonly<{}>,\n        snapshot?: any\n    ) {\n        if (prevProps.session !== this.props.session) {\n            if (this.reloadInterval !== undefined) {\n                window.clearInterval(this.reloadInterval);\n            }\n\n            this.setReloadInterval();\n        }\n    }\n\n    private setReloadInterval() {\n        const { session, reloadHistory } = this.props;\n\n        if (session !== undefined) {\n            this.reloadInterval = window.setInterval(() => reloadHistory(session), 1000);\n        }\n    }\n\n    render() {\n        return (\n            <GuardForAuthorized redirectUrl=\"/\">\n                <div className=\"area-page-main\">\n                    <div className=\"area-page-row\">\n                        <div className=\"area-container page-block\">\n                            <AreaContainer />\n                        </div>\n\n                        <div className=\"area-form-container page-block\">\n                            <AreaFormContainer />\n                        </div>\n                    </div>\n\n                    <Guard isAllowed={this.props.historyLength > 0}>\n                        <div className=\"history-table-container page-block\">\n                            <HistoryTableContainer />\n                        </div>\n                    </Guard>\n                </div>\n            </GuardForAuthorized>\n        );\n    }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { callBackend, callBackendWithoutLock } from '../../store/application/actions';\nimport { updateHistory } from '../../store/areaPage/actions';\nimport { AreaPage, AreaPageProps } from './AreaPage';\nimport { RootState } from '../../reducer';\nimport { parseQuery } from \"../../models/query\";\n\ntype StateProps = Pick<AreaPageProps, 'session' | 'historyLength'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return {\n        session: state.application.session!,\n        historyLength: state.areaPage.history.length\n    };\n}\n\ntype DispatchProps = Pick<AreaPageProps, 'reloadHistory'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        reloadHistory(session: string): void {\n            dispatch(callBackendWithoutLock(callBackend(\n                'history',\n                async fetch => {\n                    const response = await fetch;\n\n                    if (!response.ok) {\n                        return;\n                    }\n\n                    dispatch(updateHistory((await response.json()).map(parseQuery)));\n                },\n                session\n            )));\n        }\n    };\n}\n\nexport const AreaPageContainer = connect(mapStateToProps, mapDispatchToProps)(AreaPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { LoginPage } from './pages/LoginPage/LoginPage';\nimport { AreaPageContainer } from './pages/AreaPage/AreaPageContainer';\n\nexport const routes = (\n    <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/area\" component={AreaPageContainer} />\n    </Switch>\n);\n","import React from 'react';\nimport { Dialog, DialogActionProps } from 'react-toolbox/lib/dialog';\n\nimport { CallBackendActionNotificationType } from '../../store/application/actions';\n\nexport interface CallBackendNotificationsProps {\n\n    shownCallBackendNotification?: CallBackendActionNotificationType;\n\n    onNotificationHide(): void;\n    onSignOut(): void;\n}\n\nexport class CallBackendNotifications extends React.Component<CallBackendNotificationsProps> {\n\n    private okDialogAction: DialogActionProps = { label: 'Ок', onClick: this.props.onNotificationHide };\n\n    render() {\n        const { shownCallBackendNotification, onNotificationHide } = this.props;\n\n        return (\n            <>\n                <Dialog title=\"Ошибка запроса\" actions={[this.okDialogAction]}\n                        onOverlayClick={onNotificationHide} onEscKeyDown={onNotificationHide}\n                        active={shownCallBackendNotification === CallBackendActionNotificationType.INVALID_VALUE}>\n                    <p>\n                        В одном или нескольких переданных параметрах была ошибка.<br />\n                        Пожалуйста, проверьте отправленные данные и повторите попытку.\n                    </p>\n                </Dialog>\n\n                <Dialog title=\"Ошибка соединения\" actions={[this.okDialogAction]}\n                        onOverlayClick={onNotificationHide} onEscKeyDown={onNotificationHide}\n                        active={shownCallBackendNotification === CallBackendActionNotificationType.CANNOT_CONNECT}>\n                    <p>\n                        Произошла ошибка при подключении к серверу. Пожалуйста, попробуйте позже.\n                    </p>\n                </Dialog>\n            </>\n        )\n    }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { CallBackendNotifications, CallBackendNotificationsProps } from './CallBackendNotifications';\nimport { hideBackendNotification, resetSession } from '../../store/application/actions';\nimport { RootState } from '../../reducer';\n\ntype StateProps = Pick<CallBackendNotificationsProps, 'shownCallBackendNotification'>;\n\nfunction mapStateToProps(state: RootState): StateProps {\n    return { shownCallBackendNotification: state.application.shownCallBackendNotification };\n}\n\ntype DispatchProps = Pick<CallBackendNotificationsProps, 'onNotificationHide' | 'onSignOut'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        onNotificationHide() { dispatch(hideBackendNotification()); },\n        onSignOut() { dispatch(resetSession()); }\n    };\n}\n\nexport const CallBackendNotificationsContainer = connect(mapStateToProps, mapDispatchToProps)(CallBackendNotifications);\n","import React from 'react';\nimport { Button } from 'react-toolbox/lib/button';\n\nexport interface SignOutButtonProps {\n\n    onSignOut(): void;\n}\n\nexport class SignOutButton extends React.Component<SignOutButtonProps, any> {\n\n    render() {\n        return (\n            <Button label=\"Выход\" onClick={this.props.onSignOut} raised />\n        );\n    }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { SignOutButton, SignOutButtonProps } from './SignOutButton';\nimport { resetSession } from '../../store/application/actions';\n\ntype DispatchProps = Pick<SignOutButtonProps, 'onSignOut'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return { onSignOut() { dispatch(resetSession()); } };\n}\n\nexport const SignOutButtonContainer = connect(undefined, mapDispatchToProps)(SignOutButton);\n","import React from \"react\";\n\nimport './Header.css';\n\nexport class Header extends React.Component {\n\n    render() {\n        return (\n            <div className=\"header page-block\">\n                <h1>Лабораторная работа №4</h1>\n\n                по дисциплине\n\n                <h2>Web-программирование</h2>\n\n                <div className=\"header-details\">\n                    <strong>Лысенко Иван Владимирович</strong><br />\n                    <strong>Соколова Анастасия Денисовна</strong><br />\n                    Группа: <strong>P3201</strong><br />\n                    Вариант: <strong>20133</strong>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { Layout, Panel } from 'react-toolbox/lib/layout';\nimport { AppBar } from 'react-toolbox/lib/app_bar';\n\nimport { SignOutButtonContainer } from '../SignOutButton/SignOutButtonContainer';\nimport { GuardForAuthorized } from '../Guard/GuardForAuthorized';\nimport { Header } from \"../Header/Header\";\n\nimport './PageContainer.css';\n\nexport class PageContainer extends React.Component<React.PropsWithChildren<{}>> {\n\n    render() {\n        return (\n            <Layout className=\"page\">\n                <Panel>\n                    <GuardForAuthorized>\n                        <AppBar>\n                            <div className=\"page-title\">\n                                <SignOutButtonContainer />\n                            </div>\n                        </AppBar>\n                    </GuardForAuthorized>\n\n                    <div className=\"page-content\">\n                        <Header />\n\n                        {this.props.children}\n                    </div>\n                </Panel>\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { routes } from '../../routes';\nimport { CallBackendNotificationsContainer } from '../CallBackendNotifications/CallBackendNotificationsContainer';\nimport { PageContainer } from '../PageContainer/PageContainer';\n\nimport './App.css';\n\nexport interface AppProps {\n\n    loadSession(): void;\n}\n\nexport class App extends React.Component<AppProps> {\n\n    componentDidMount(): void {\n        this.props.loadSession();\n    }\n\n    render() {\n        return (\n            <PageContainer>\n                <BrowserRouter>\n                    {routes}\n                </BrowserRouter>\n\n                <CallBackendNotificationsContainer />\n            </PageContainer>\n        );\n    }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { App, AppProps } from './App';\nimport { callBackend, setSession } from '../../store/application/actions';\nimport { updateHistory } from \"../../store/areaPage/actions\";\nimport { parseQuery } from \"../../models/query\";\n\ntype DispatchProps = Pick<AppProps, 'loadSession'>;\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n    return {\n        loadSession(): void {\n            try {\n                const session = JSON.parse(localStorage.getItem('session') ?? 'null');\n\n                if (session) {\n                    dispatch(callBackend('history', async fetch => {\n                        const response = await fetch;\n\n                        if (response.ok) {\n                            dispatch(setSession(session));\n                            dispatch(updateHistory((await response.json()).map(parseQuery)))\n                        }\n                    }, session));\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }\n}\n\nexport const AppContainer = connect(undefined, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport 'babel-polyfill';\n\nimport { rootReducer } from './reducer';\nimport { actionHandler, registerHandler } from './middlewares/actionHandler';\nimport { ApplicationActionType } from './store/application/actions';\nimport { AreaPageActionType } from './store/areaPage/actions';\nimport { callBackend } from './actionHandlers/callBackend';\nimport { sessionHandler } from './actionHandlers/sessionHandler';\nimport { sendQuery } from './actionHandlers/sendQuery';\nimport { AppContainer } from './components/App/AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = createStore(rootReducer, applyMiddleware(actionHandler));\n\nregisterHandler(callBackend, ApplicationActionType.CALL_BACKEND);\nregisterHandler(sessionHandler, ApplicationActionType.SET_SESSION, ApplicationActionType.RESET_SESSION);\nregisterHandler(sendQuery, AreaPageActionType.SEND_QUERY);\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { MiddlewareAPI } from 'redux';\n\nimport { ApplicationActionType, ResetSessionAction, SetSessionAction } from '../store/application/actions';\nimport { clean } from '../store/areaPage/actions';\n\nexport function sessionHandler(action: SetSessionAction | ResetSessionAction, store: MiddlewareAPI) {\n    switch (action.type) {\n        case ApplicationActionType.SET_SESSION:\n            localStorage.setItem('session', JSON.stringify((action as SetSessionAction).session));\n            break;\n\n        case ApplicationActionType.RESET_SESSION:\n            localStorage.removeItem('session');\n\n            store.dispatch(clean());\n            break;\n    }\n}\n","import { MiddlewareAPI } from 'redux';\n\nimport { callBackend, callBackendWithNotify } from '../store/application/actions';\nimport { addQuery, SendQueryAction } from '../store/areaPage/actions';\nimport { RootState } from '../reducer';\nimport { parseQuery } from \"../models/query\";\n\nexport function sendQuery(action: SendQueryAction, store: MiddlewareAPI) {\n    const state = store.getState() as RootState;\n\n    const x = action.x ?? state.areaPage.form.x;\n    const y = action.y ?? state.areaPage.form.y;\n    const r = action.r ?? state.areaPage.form.r;\n\n    if (x !== undefined && y !== undefined && r !== undefined) {\n        store.dispatch(callBackendWithNotify(callBackend(\n            'areaCheck',\n            async fetch => {\n                const response = await fetch;\n\n                if (!response.ok) {\n                    return;\n                }\n\n                store.dispatch(addQuery(parseQuery(await response.json())));\n            },\n            state.application.session,\n            'POST',\n            { x, y, r }\n        )));\n    }\n}\n"],"sourceRoot":""}